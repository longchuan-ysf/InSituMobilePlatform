/************************************************************************************
*  Copyright (c), 2004-2019, 北京中嵌凌云电子有限公司
*            All rights reserved.
*
* http:  www.embedarm.com
* Email: embedarm@126.com
*
* File name: EMB8628I_IOConfig.h
* Project  : STM32F1XX/4XX系列模块软件
* Processor: STM32F1XX/4XX
* Compiler : RealView MDK-ARM Compiler
* 
* Author:  EmbedARM
* Version: 1.10
* Date:    2018.10.1			
* Email:   EmbedARM@126.com
* 
* Description: 本文件是EMB8628I_Config工控板IO端口功能, 客户可根据模块实际应用进行更改;
*
* Others: none;
*
* Function List:
*		
* History:
*   1. Author:       EmbedARM  
*	   Version: 	 0.90
*	   Date:         2012.1.1
*      Modification: none
*
*************************************************************************************/
#ifndef __EMB8628I_IOCONFIG_H 
#define __EMB8628I_IOCONFIG_H 

/************************************************************************************/
// 端口定义说明
/************************************************************************************/
/*
|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 产品型号 | 端口标号、类型及说明         |  1脚  |  2脚  |  3脚  |  4脚  |  5脚  |  6脚  |  7脚   |  8脚   |   9脚   |   10脚   |  11脚  |  12脚  |     备注                                     |
|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP6: DI1-DI8, 光电隔离输入   |  COM  |  DI1  |  DI2  |  DI3  |  DI4  |  DI5  |  DI6   |  DI7   |   DI8   |    -     | 由MCU IO口直接驱动                                             |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP6: DI9-DI16, 光电隔离输入  |  COM  |  DI9  |  DI10 |  DI11 |  DI12 |  DI13 |  DI14  |  DI15  |   DI16  |    -     | 由MCU IO口直接驱动                                             |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| EMB8628I | JP8: 继电器控制输出          |K1/DO9 |K2/DO10| COM12 |K3/DO11|K4/DO12| COM34 |K5/DO13 |K6/DO14 |  COM56  | K7/DO15  |K8/DO16 | COM78  | 继电器K1~K8分别由DO9~DO16控制输出            | 
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP7: DO1-DO8, 光电隔离输出   |  +OPT |  DO1  |  DO2  |  DO3  |  DO4  |  DO5  |  DO6   |  DO7   |   DO8   |    GND   | 由MCU IO口直接驱动                                             |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | J5: UART4,SPI2及I2C2接口     |  +5V  | +3.3V |  GND  |  GND  | TXD4  |  RXD4 |I2C2_SCL|I2C2_SDA|SPI2_MOSI|SPI2_MISO |SPI2_SCK|SPI2_NSS| TTL电平接口                                  |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP20: 2路RS232接口           |  TX1  |  RX1  |  TX5  |  RX5  |  GND  |   -   |    -   |    -   |    -    |    -     | TX1/5: RS232发送端口;RX1/5表示: RS232接收端口                  |
|          |                              | UART1转RS232  | UART5转RS232  |  地   |   -   |    -   |    -   |    -    |    -     |                                                                |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP9: LCD RS232接口           |  VDD  |  VDD  |  空   |  RX3  |  TX3  |  TX3  |   GND  |   GND  |    -    |    -     | RX3(RS232接收)/TX3(RS232发送):UART3转RS232, VDD电源: 9~15V     |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP19:RS485和CAN接口,光电隔离 |  A+   |   B-  |  CANH |  CANL |   -   |   -   |   -    |   -    |    -    |    -     |UART2转RS485, RK8:断开; CAN: RK9,短接,启用120电阻               |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP17: 3路差分脉冲输入        |  +VT  |   A+  |   A-  |   B+  |   B-  |   Z+  |   Z-   |  GND   |    -    |    -     | A+/A-:FCLK1CH1(PE9); B+/B-:FCLK1CH2(PE11); B+/B-:FCLK1CH2(PE13)|
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP15: 3路差分脉冲输入        |  +VT  |   A+  |   A-  |   B+  |   B-  |   Z+  |   Z-   |  GND   |    -    |    -     | A+/A-:FCLK2CH1(PC6); B+/B-:FCLK2CH2(PC7); B+/B-:FCLK2CH2(PC8)  |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP16: 3路差分脉冲输入        |  +VT  |   A+  |   A-  |   B+  |   B-  |   Z+  |   Z-   |  GND   |    -    |    -     | A+/A-:FCLK3CH1(PD12);B+/B-:FCLK3CH2(PD13);B+/B-:FCLK3CH2(PD14) |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP18: 1路差分脉冲输入        |  +VT  |   A+  |   A-  |  GND  |   -   |   -   |    -   |   -    |    -    |    -     | A+/A-:FCLK4CH1(PE5);                                           |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP12: 2路PWM输出接口,光电隔离|  +OPT |  PWM1 |  DIR1 |  ENA1 |  PWM2 | DIR2  | ENA2   |  GND   |    -    |    -     |PWM1:PWM1_PUL(PA15);DIR1:PWM1_DIR(PD10);ENA1:PWM1_ENA(PD11)     |
|          |                              |       |       |       |       |       |       |        |        |         |          |PWM2:PWM2_PUL(PA6);DIR2:PWM2_DIR(PD15);ENA2:PWM2_ENA(PG2)       |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP13: 2路PWM输出接口,光电隔离|  +OPT |  PWM3 |  DIR3 |  ENA3 |  PWM4 | DIR4  | ENA4   |  GND   |    -    |    -     |PWM3:PWM3_PUL(PA0);DIR3:PWM3_DIR(PG3);ENA3:PWM3_ENA(PG4)        |
|          |                              |       |       |       |       |       |       |        |        |         |          |PWM4:PWM4_PUL(PD12);DIR4:PWM4_DIR(PG5);ENA4:PWM4_ENA(PG6)       |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP11:2路DAC输出接口,0-10V输出|  AO1  |  AO2  |  GND  |   -   |   -   |   -   |   -    |   -    |    -    |    -     |DAC1/2就是AO1/2,GND:模拟地;									  |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP10: 6路AI输入接口          |  VDD  |  AI1  |  AI2  |  AI3  |  GND  |  VDD  |  AI4   |  AI5   |   AI6   |   GND    | VDD:电源电压; RK1~8断开:AI1~8,0-10V输入;RK1~8短接:AI1~8,0-20mA输入|
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP2: 电源接口, 9-15V输入     |  VDD  |  GND  |  +5V  |  GND  |   -   |   -   |   -    |   -    |    -    |    -     | VDD为输入电压: 9~15V; +5V为输出电压                            |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP4: 键盘接口                |  L1   |  L2   |  L3   |  L4   |  C1   |  C2   |   C3   |   C4   |   C5    |    C6    |    C7    | L1~L4和C1~C7组成28按键                              |
|          |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP3: 100M以太网口            | -                                                                                    | 只支持100M网络                                                 |
|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
*/
/************************************************************************************/
// 引用外部头文件
/************************************************************************************/
#include "config.h"	 

/************************************************************************************/
// DO输出端口定义
/************************************************************************************/
#define DO_NUM          16     // 定义DO输出端口数量 
// JP5 DO1-DO8定义:     JP5->1脚(+OPT) 
#define DO1   PG0    // JP5->2脚
#define DO2   PG1    // JP6->3脚
#define DO3   PE7    // JP6->4脚
#define DO4   PE8    // JP6->5脚
#define DO5   PE10   // JP6->6脚
#define DO6   PE12   // JP6->7脚
#define DO7   PE14   // JP6->8脚
#define DO8   PE15   // JP6->9脚
					 // JP6->10脚(GND)

// JP8 继电器K1(DO9)-K8(DO16)定义: 
#define DO9    PG9    // JP8->1脚, 继电器K1
#define DO10   PG10   // JP8->2脚, 继电器K2
					  // JP8->3脚, 继电器K1/K2公共端COM12
#define DO11   PG12   // JP8->4脚, 继电器K3
#define DO12   PG15   // JP8->5脚, 继电器K4
					  // JP8->6脚, 继电器K3/K4公共端COM34
#define DO13   PE1    // JP8->7脚, 继电器K5
#define DO14   PE6    // JP8->8脚, 继电器K6
					  // JP8->9脚, 继电器K5/K6公共端COM56
#define DO15   PE3    // JP8->10脚, 继电器K7
#define DO16   PE2    // JP8->11脚, 继电器K8
					  // JP8->12脚, 继电器K7/K8公共端COM78

// 以下2种模式只能选择一种
#define DO_OUT_PP     // 定义DO输出为推挽输出模式
//#define DO_OUT_OD     // 定义DO输出为开路输出模式
					  
/************************************************************************************/
// DI输出端口定义
/************************************************************************************/
#define DI_NUM   16      // 定义DI输入数量 

// JP6 DI1-DI8定义:     JP6->1脚(COM) 
#define DI1   PF0    // JP6->2脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI2   PF1    // JP6->3脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI3   PF2    // JP6->4脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI4   PF3    // JP6->5脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI5   PF4    // JP6->6脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI6   PF5    // JP6->7脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI7   PF6    // JP6->8脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI8   PF7    // JP6->9脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置

// JP7 DI9-DI6定义:       JP7->1脚(COM) 
#define DI9    PF8     // JP7->2脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI10   PF9     // JP7->3脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI11   PF10    // JP7->4脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI12   PF11    // JP7->5脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI13   PF12    // JP7->6脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI14   PF13    // JP7->7脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI15   PF14    // JP7->8脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI16   PF15    // JP7->9脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置

/************************************************************************************/
// LED/蜂鸣器/拨码开关/按键/其它端口定义
/************************************************************************************/
// 蜂鸣器IO定义
#define ALARM    PD4
// 运行LED IO定义
#define RUN_LED  PB2

/************************************************************************************/
// AI端口定义
/************************************************************************************/
#define  AI_NUM      6      // 定义AI输入端口数量 

// 设置板子端口模拟量输入AI1-AI6与模块模拟量AIN0-AIN15对应关系
//    JP10定义     模块管脚定义
#define  AI1        AIN12    // 设置AI1<->AIN12(PC2)
#define  AI2        AIN10    // 设置AI2<->AIN10(PC0)
#define  AI3        AIN3     // 设置AI3<->AIN3(PA3)
#define  AI4        AIN13    // 设置AI4<->AIN13(PC3)
#define  AI5        AIN9     // 设置AI5<->AIN9(PB1)
#define  AI6        AIN8     // 设置AI6<->AIN8(PB0)

/************************************************************************************/
// UART(RS232/RS485)端口定义
/************************************************************************************/
// UART1(管脚)功能重映射设置: 转成RS232接口(JP20的TX1、RX1)
#define UART1_TX         PB6             // 设置TX管脚, 对应JP20的1脚TX1
#define UART1_RX         PB7             // 设置RX管脚, 对应JP20的2脚RX1  
#define UART1_DIR        IO_NONE         // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART1_DIR_HL     0               // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART2(管脚)功能重映射设置: 转成RS485接口(JP19的A+、B-)
#define UART2_TX         PD5             // 设置TX管脚
#define UART2_RX         PD6             // 设置RX管脚
#define UART2_DIR        PD7             // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART2_DIR_HL     0               // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART3(管脚)功能重映射设置: 转成RS232接口(JP9的TX1、RX1)
#define UART3_TX         PD8              // 设置TX管脚, 对应JP9的5/6脚TX3
#define UART3_RX         PD9              // 设置RX管脚, 对应JP9的4脚RX3 
#define UART3_DIR        IO_NONE          // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART3_DIR_HL     0                // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART4(管脚)功能重映射设置: TTL接口(J5的TXD4, RXD4)
#define UART4_TX         PC10             // 设置TX管脚, 对应J5的第5脚TXD4
#define UART4_RX         PC11             // 设置RX管脚, 对应J5的第6脚RXD4
#define UART4_DIR        PD3              // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART4_DIR_HL     0                // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART5(管脚)功能重映射设置: 转成RS232接口(JP20的TX5、RX5)
#define UART5_TX         PC12             // 设置TX管脚, 对应JP20的3脚TX5
#define UART5_RX         PD2              // 设置RX管脚, 对应JP20的4脚RX5
#define UART5_DIR        IO_NONE          // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART5_DIR_HL     0                // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

/************************************************************************************/
// CAN端口定义
/************************************************************************************/
// CAN1(管脚)功能重映射设置: JP19的CANH、CANL
#define CAN1_TX         PD1            // CAN1设置TX管脚, 对应JP19的3脚CANH
#define CAN1_RX         PD0            // CAN1设置RX管脚, 对应JP19的4脚CANL

/************************************************************************************/
// PWM端口定义
// 注意: JP12/JP13是光电隔离输出, 所以需要在+OPT和GND端口加外部电源: +5V~+24V;
//       2个端子的+OPT/GND是内部连接，只需再一个的端子上接电源即可
/************************************************************************************/
#define  PWM_NUM         4         // PWM数量定义

// PWM1(TIM2)管脚功能重映射设置: 
#define PWM1_CH1        PA15         // PWM1(TIM2) CH1管脚定义
// JP12: PWM1(PWM1_PUL),DIR1(PWM1_DIR)和ENA1(PWM1_ENA) IO定义
#define PWM1_PUL        PA15        // JP12: 2脚, PWM1脉冲 
#define PWM1_DIR        PD10        // JP12: 3脚, 脉冲方向控制 
#define PWM1_ENA        PD11        // JP12: 4脚, 脉冲使能控制 

// PWM2(TIM3)管脚功能重映射设置: 
#define PWM2_CH1        PA6         // PWM2(TIM3) CH1管脚定义
// JP12: PWM2(PWM2_PUL),DIR2(PWM2_DIR)和ENA2(PWM2_ENA) IO定义
#define PWM2_PUL        PA6        // JP12: 5脚, PWM2脉冲 
#define PWM2_DIR        PD15       // JP12: 6脚, DIR2脉冲方向控制 
#define PWM2_ENA        PG2        // JP12: 7脚, ENA2脉冲使能控制 


// PWM3(TIM5)管脚功能重映射设置: 
#define PWM3_CH1        PA0         // PWM3(TIM5) CH1管脚定义
// JP13: PWM3(PWM3_PUL),DIR3(PWM3_DIR)和ENA3(PWM3_ENA) IO定义
#define PWM3_PUL        PA0        // JP13: 2脚, PWM3脉冲 
#define PWM3_DIR        PG3        // JP13: 3脚, 脉冲方向控制 
#define PWM3_ENA        PG4        // JP13: 4脚, 脉冲使能控制 

// PWM4(TIM4)管脚功能重映射设置: 注意, 因为FCLK3和PWM4共用TIM4, 所以RK10断开, RK11短接;
#define PWM4_CH1        PD12       // PWM4(TIM4) CH1管脚定义
// JP13: PWM4(PWM4_PUL),DIR4(PWM4_DIR)和ENA4(PWM4_ENA) IO定义
#define PWM4_PUL        PD12       // JP13: 5脚, PWM4脉冲 
#define PWM4_DIR        PG5        // JP13: 6脚, DIR4脉冲方向控制 
#define PWM4_ENA        PG6        // JP13: 7脚, ENA4脉冲使能控制 

/************************************************************************************/
// FCLK端口定义
// 注意: +VT是端口输出电压: +5V输出: 请短接VT5, 断开VT12; +12V输出: 请断开VT5, 短接VT12; 
/************************************************************************************/
#define  FCLK_NUM       4          // FCLK数量定义

// FCLK1(TIM1)管脚功能重映射设置: 
// JP17: 1脚, +VT; 2,3脚(A+,A-: FCLK1_CH1),PE9; 4,5脚(B+,B-: FCLK1_CH2), PE11; 6,7脚(Z+,Z-: FCLK1_CH3), PE13; 8脚, GND;
#define FCLK1_CH1      PE9          // FCLK1(TIM1) CH1管脚定义
#define FCLK1_CH2      PE11         // FCLK1(TIM1) CH2管脚定义
#define FCLK1_CH3      PE13         // FCLK1(TIM1) CH3管脚定义


// FCLK2(TIM8)管脚功能重映射设置: 
// JP15: 1脚, +VT; 2,3脚(A+,A-: FCLK2_CH1),PC6; 4,5脚(B+,B-: FCLK2_CH2), PC7; 6,7脚(Z+,Z-: FCLK2_CH3), PC8; 8脚, GND;
#define FCLK2_CH1      PC6          // FCLK2(TIM8) CH1管脚定义
#define FCLK2_CH2      PC7          // FCLK2(TIM8) CH2管脚定义
#define FCLK2_CH3      PC8          // FCLK2(TIM8) CH3管脚定义

// FCLK3(TIM4)管脚功能重映射设置: 注意, 因为FCLK3和PWM4共用TIM4, 所以RK10短接, RK11断开;
// JP16: 1脚, +VT; 2,3脚(A+,A-: FCLK3_CH1),PD12; 4,5脚(B+,B-: FCLK3_CH2), PD13; 6,7脚(Z+,Z-: FCLK3_CH3), PD14; 8脚, GND;
#define FCLK3_CH1      PD12         // FCLK3(TIM4) CH1管脚定义
#define FCLK3_CH2      PD13         // FCLK3(TIM4) CH2管脚定义
#define FCLK3_CH3      PD14         // FCLK3(TIM4) CH3管脚定义

// FCLK4(TIM9)管脚功能重映射设置: 
// JP18: 1脚, +VT; 2,3脚(A+,B-: FCLK4_CH1), PE5;  4脚, GND;
#define FCLK4_CH1      PE5         // FCLK4(TIM9) CH1管脚定义
//#define FCLK4_CH2      PE6         // FCLK4(TIM9) CH2管脚定义

/************************************************************************************/
// I2C管脚定义
/************************************************************************************/
// 板载EEPROM管脚定义(即I2C1引脚定义)
#define I2C1_SCL    PB8    // I2C1 SCL管脚
#define I2C1_SDA    PB9    // I2C1 SDA管脚

// I2C2
#define I2C2_SCL    PB10    // I2C2 SCL管脚
#define I2C2_SDA    PB11    // I2C2 SDA管脚

// I2C3
#define I2C3_SCL    PA8    // I2C3 SCL管脚
#define I2C3_SDA    PC9    // I2C3 SDA管脚

/************************************************************************************/
// CH455管脚定义
/************************************************************************************/
#define CH455_SCL    PA8    // SCL管脚
#define CH455_SDA    PC9    // SDA管脚
#define CH455_INT    PD3    // INT管脚

/************************************************************************************/
// SPI/SPI FLASH管脚定义
/************************************************************************************/
// SPI1引脚定义:
#define SPI1_NSS    PA15   // SPI1_NSS管脚
#define SPI1_SCK    PB3    // SPI1_SCK管脚
#define SPI1_MISO   PB4    // SPI1_MOSI管脚
#define SPI1_MOSI   PB5    // SPI1_MISO管脚

// SPI2引脚定义
//#define SPI2_REMAP  SPI_REMAP_0   // SPI2重映射0
//#define SPI2_NSS    PB12   // SPI2_NSS管脚 
//#define SPI2_SCK    PB13   // SPI2_SCK管脚
//#define SPI2_MISO   PB14   // SPI2_MOSI管脚
//#define SPI2_MOSI   PB15   // SPI2_MISO管脚

// SPI3引脚定义
#define SPI3_NSS    PA4    // SPI3_NSS管脚 
#define SPI3_SCK    PC10   // SPI3_SCK管脚
#define SPI3_MISO   PC11   // SPI3_MOSI管脚
#define SPI3_MOSI   PC12   // SPI3_MISO管脚

// 板载SPI FLASH(W25QXX)片选定义
#define W25QXX_CS   PE0  

/************************************************************************************/
// 网络管脚定义
/************************************************************************************/
// 网络配置引脚
#define ETH_MDC         PC1     // 推挽复用输出，高速(50MHz) 
#define ETH_REF         PA1		// 浮空输入(复位状态) 
#define ETH_MDIO        PA2     // 推挽复用输出，高速(50MHz) 
#define ETH_CRS_DV      PA7     // 浮空输入(复位状态) 
#define ETH_RXD0        PC4		// 浮空输入(复位状态) 
#define ETH_RXD1        PC5		// 浮空输入(复位状态)

#define ETH_TX_EN       PG11    // 推挽复用输出，高速(50MHz)
#define ETH_TXD0        PG13	// 推挽复用输出，高速(50MHz)  
#define ETH_TXD1        PG14	// 推挽复用输出，高速(50MHz) 

#define ETH_MCO         IO_NONE  

#define ETH_RESET       PE4   	// 推挽输出，复位引脚  Modify EmbedARM: 2016.4.28


#endif
/***********************************************************************************/
// 文件结束
/***********************************************************************************/
